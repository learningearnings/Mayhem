{"version":3,"sources":["pds-library/src/pdsI18n.ts"],"names":[],"mappings":"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","file":"pdsI18n.js","sourcesContent":["//This is kept private to keep the library footprint small.\nlet formatNumber = function(format, number: number): string | undefined {\n  let ds = format.ds; // decimal separator\n  let result = '';\n\n  //curiously, isNaN(null) returns false.\n  if (isNaN(number) || number == null) {\n    if (number == null) {\n      return;\n    }\n\n    return String(number);\n  } else {\n    result = number.toString();\n    result = result.replace('.', ds);\n    return result;\n  }\n};\n\n//Returns the string representation of number left-padded with enough zeros to make it the length of padding\n//Returns just the string representation of number if it is already longer than padding\nlet padZeros = function(number: number, padding: number): string | undefined {\n  let paddedString = '';\n  if (isNaN(number) || isNaN(padding) || number == null || padding == null) {\n    if (number == null) {\n      return;\n    }\n\n    return String(number);\n  } else {\n    paddedString = number.toString();\n    while (paddedString.length < padding) {\n      paddedString = '0' + paddedString;\n    }\n\n    return paddedString;\n  }\n};\n\nexport let pdsI18n = {\n  setLocaleAndWidgetKeys: function(locale, widgetKeys?): void {\n    this.locale = locale;\n    if (widgetKeys != null) {\n      /* tslint:disable */\n      for (let key in widgetKeys) {\n        this.widgetKeys[key] = widgetKeys[key];\n      }\n      /* tslint:enable */\n    }\n    this.isUpdatedMessageKeys = true;\n    let elements = document.querySelectorAll('.default-messages');\n    (<any>elements).forEach((element: any) => {\n      if (typeof element.messageKeysUpdated === 'function') {\n        element.messageKeysUpdated();\n        element.removeMessgeKeyUpdatedClass();\n      }\n    });\n  },\n  isUpdatedMessageKeys: false,\n  twoDigitRegex: /^\\d{2}$/,\n  pds: undefined,\n  //This object may be populated with message keys for translation on pages that aren't using Angular 2 to do\n  //translation.\n  messageKeys: {},\n  //These messages can be overridden by message keys that we would want to use instead of the defaults.\n  //Note: running this.getText('numWidget.tooLarge') will not return 'Too Large'.\n  widgetKeys: {\n    'numWidget.tooLarge': 'Too Large',\n    'numWidget.notAnInteger': 'Not an Integer',\n    'numWidget.invalidNumber': 'Not a Valid Number',\n    'numWidget.failedMinlength': 'Number must be at least {{arg0}} digits in length',\n    'numWidget.failedMaxdecimals': 'Number cannot have more than {{arg0}} decimal places',\n    'numWidget.failedMinValue': 'Number cannot be less than {{arg0}}',\n    'numWidget.failedMaxValue': 'Number cannot be greater than {{arg0}}',\n    'numWidget.failedMinValueExclusive': 'Number cannot be less than or equal to {{arg0}}',\n    'numWidget.failedMaxValueExclusive': 'Number cannot be greater than or equal to {{arg0}}',\n    'dateWidget.invalidDate': 'Not a Valid Date',\n    'dateWidget.failedMinDate': 'Date cannot be before {{arg0}}',\n    'dateWidget.failedMaxDate': 'Date cannot be after {{arg0}}',\n    'dateWidget.failedMinDateExclusive': 'Date cannot be on or before {{arg0}}',\n    'dateWidget.failedMaxDateExclusive': 'Date cannot be on or after {{arg0}}',\n    'dateWidget.open_picker_dialog': 'Open Date Picker',\n    'textWidget.failedMinlength': 'Text must be at least {{arg0}} characters in length',\n    'textWidget.failedMaxlength': 'Text must not be greater than {{arg0}} characters in length',\n    'textWidget.failedRegex': 'Text does not match required pattern',\n    'textWidget.required': 'required'\n  },\n  //This stores the locale information required by the widgets.  Updated it depending on what locale you are in.\n  locale: {\n    'LOCALE': 'en_US',\n    'DATETIME_FORMATS': {\n      'MONTH': ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n      'SHORTMONTH': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n      'medium': 'MM/dd/yyyy hh:mm:ss a',\n      'mediumDateText': 'MM/DD/YYYY',\n      'shortDateText': 'MM/DD/YY',\n      'AMPMS': ['AM', 'PM'],\n      'mediumDate': 'MM/dd/yyyy',\n      'mediumTime': 'hh:mm:ss a',\n      'shortTime': 'hh:mm a',\n      'short': 'M/d/yy hh:mm a',\n      'SHORTDAY': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n      'DAY': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n      'shortDate': 'M/d/yy'\n    },\n    '$BREACH_MITIGATION': 'XRFmEENA55t627cN',\n    'NUMBER_FORMATS': {\n      'DECIMAL_SEP': '.',\n      'number_regex': '([-]?(([0-9]{1,3}(,[0-9]{3})*(\\\\.[0-9]+)?|\\\\.[0-9]+)|([0-9]*(\\\\.[0-9]+)?)))',\n      'CURRENCY_SYM': '$',\n      'GROUP_SEP': ',',\n      'PATTERNS': [{\n        'negSuf': '',\n        'posSuf': '',\n        'lgSize': '3',\n        'minFrac': 0,\n        'minInt': 1,\n        'negPre': '-',\n        'gSize': 3,\n        'maxFrac': 9,\n        'macFrac': '0',\n        'posPre': ''\n      }],\n      'number_format': '#,###.#########'\n    }\n  },\n  overWriteGetText(getTextOverwriteFunction): void {\n    this.getTextOverwriteFunction = getTextOverwriteFunction;\n  },\n  getShortFormat: function(): void {\n    return this.locale.DATETIME_FORMATS.shortDate;\n  }, getDateFormat: function(): void {\n    return this.locale.DATETIME_FORMATS.mediumDate;\n  }, getDateText: function(): string {\n    return this.locale.DATETIME_FORMATS.mediumDateText;\n  },\n  /**\n   * This function is expceded to be overridden by applications using Angular.\n   * @param key\n   * @param params\n   * @returns {any}\n   */\n    getText(key: string, params: string | Array<string>): string | undefined {\n\n    //This is for Angular2 to use ng-translate instead of the default function.\n    if (this.getTextOverwriteFunction != null) {\n      return this.getTextOverwriteFunction(key, params);\n    }\n\n    if (typeof key !== 'string') {\n      return;\n    }\n\n    let msg = this.messageKeys[key];\n    if (msg == null) {\n      msg = key;\n    }\n\n    if (params != null) {\n      if (!(params instanceof Array)) {\n        //Ha ha! Now it is an array of strings.\n        params = [<string>params];\n      }\n\n      if (params.length > 0) {\n        for (let i = 0; i < params.length; i++) {\n          let token = '{{arg' + i + '}}';\n          //Set param[i] as a string just in case it slips through.\n          msg = msg.replace(token, String(params[i]));\n        }\n      }\n    }\n\n    return msg;\n  },\n  localizeDate: function(d: Date, fmt?): string {\n    if (d == null) {\n      return '';\n    }\n\n    if (!this.isValidDateObject(d)) {\n      return String(d);\n    }\n\n    let seperator = this.locale.DATETIME_FORMATS.mediumDate.match(/[^A-Za-z]/);\n    let patternPieces = this.locale.DATETIME_FORMATS.mediumDate.split(seperator[0]);\n    let localizedStrings: Array<number> = [];\n\n    for (let i = 0; i < 3; i++) {\n      switch (patternPieces[i]) {\n        case 'd':\n          localizedStrings.push(d.getDate());\n          break;\n        case 'dd':\n          localizedStrings.push(d.getDate());\n          break;\n        case 'M':\n          localizedStrings.push(d.getMonth() + 1);\n          break;\n        case 'MM':\n          localizedStrings.push(d.getMonth() + 1);\n          break;\n        case 'yy':\n          if (fmt !== 'mmdd') {\n            localizedStrings.push(d.getFullYear());\n          }\n          break;\n        case 'yyyy':\n          if (fmt !== 'mmdd') {\n            localizedStrings.push(d.getFullYear());\n          }\n          break;\n        default:\n          console.error('Unexpected format while localizing date');\n      }\n    }\n    return localizedStrings.join(seperator);\n  },\n  deLocalizeDate: function(localizedDateString: string): Date | undefined {\n    if (localizedDateString == null || localizedDateString === '') {\n      return;\n    }\n\n    let seperator = this.locale.DATETIME_FORMATS.mediumDate.match(/[^A-Za-z]/);\n    let patternPieces = this.locale.DATETIME_FORMATS.mediumDate.split(seperator[0]);\n    let localizedPieces = localizedDateString.split(seperator);\n\n    if (localizedPieces.length === 3) {\n      let day;\n      let month;\n      let year;\n      for (let i = 0; i < 3; i++) {\n        switch (patternPieces[i]) {\n          case 'd':\n          case 'dd':\n            day = localizedPieces[i];\n            break;\n          case 'M':\n          case 'MM':\n            month = localizedPieces[i];\n            break;\n          case 'yy':\n          case 'yyyy':\n            year = localizedPieces[i];\n            if (this.twoDigitRegex.test(year)) {\n              if (parseInt(year) > 50) {\n                year = '19' + year;\n              } else {\n                year = '20' + year;\n              }\n            }\n            break;\n          default:\n            console.error('Unexpected format when delocalizing date.');\n        }\n      }\n      //  /.-,\n      let d = new Date(year, month - 1, day, 0, 0, 0);\n\n      if (this.isValidDateObject(d)) {\n        return d;\n      }\n    }\n  },\n  /**\n   * @param d - a javascript date object\n   */\n  isValidDateObject: function(d: Date): boolean {\n    if (d instanceof Date) {\n      return !isNaN(d.getTime()); //invalid date object will return NaN for getTime\n    }\n    return false;\n  },\n  /**\n   * Is the localized date string a valid date?\n   * TODO - Should passing in '' evaluate to a valid date?  Maybe not so much.\n   * @param localizedDate\n   * @returns {any}\n   */\n  isValidDate: function(localizedDate: string): boolean {\n    if (localizedDate !== '') {\n      let parsedDate: Date = this.deLocalizeDate(localizedDate);\n      return this.isValidDateObject(parsedDate);\n    }\n    return true;\n  },\n  /**\n   * @param psJsonDateString - String - in the form of yyyy-mm-dd or yyyy-mm-dd hh:mm:ss\n   * @param preserceTimeOfDay - boolean - optional param to retain hh:mm:ss in returned date\n   * object. Default is false if not passed.\n   * @returns {*}\n   */\n  parseJsonDate: function(psJsonDateString: string, preserveTimeOfDay?: boolean): Date | undefined {\n    if (psJsonDateString == null) {\n      return;\n    }\n\n    let year = 0;\n    let month = 0;\n    let date = 0;\n    let hours = 0;\n    let minutes = 0;\n    let seconds = 0;\n\n    let split = psJsonDateString.split('-');\n    if (split.length < 3) {\n      return;\n    }\n    //a valid jsonDateString may contain a time of date hour/minute/seccond\n    let dayTimeOfDay = split[2].split(' ');\n    if (dayTimeOfDay.length === 2) {\n      //time of day is present\n      split[2] = dayTimeOfDay[0];\n      if (preserveTimeOfDay) {\n        let timeOfDay = dayTimeOfDay[1].split(':');\n        if (timeOfDay.length === 3) {\n          hours = parseInt(timeOfDay[0]);\n          minutes = parseInt(timeOfDay[1]);\n          seconds = parseInt(timeOfDay[2]);\n        }\n        //else invalid hh:mm:ss - ignore it\n      }\n    }\n    year = parseInt(split[0]);\n    month = parseInt(split[1]) - 1;\n    date = parseInt(split[2]);\n    let returnDate = new Date(year, month, date, hours, minutes, seconds);\n    if (isNaN(returnDate.getTime())) {\n      return;\n    }\n    return returnDate;\n  },\n  /**\n   * Sister function of parseJsonDate.  Converts a date object into the JsonDateString format\n   * necessary for XTE.\n   */\n  getJsonDate: function(javascriptDateObject: Date, preserveTimeOfDay?: boolean): string | undefined {\n    if (javascriptDateObject == null) {\n      return;\n    }\n\n    if (isNaN(javascriptDateObject.getTime())) {\n      return;\n    }\n\n    let psJsonDateString = javascriptDateObject.getFullYear() + '-' +\n      padZeros((javascriptDateObject.getMonth() + 1), 2) + '-' +\n      padZeros(javascriptDateObject.getDate(), 2);\n\n    if (preserveTimeOfDay) {\n      psJsonDateString += ' ' + padZeros(javascriptDateObject.getHours(), 2) + ':' +\n        padZeros(javascriptDateObject.getMinutes(), 2) + ':' +\n        padZeros(javascriptDateObject.getSeconds(), 2);\n    }\n\n    return psJsonDateString;\n  },\n  /**\n   * Converts a JSON date to a non localized date\n   * @param psJsonDateString - String - in the form of yyyy-mm-dd\n   * @returns - String in the form of MM/DD/YYYY\n   */\n  parseJsonDateToNonLocalized: function(psJsonDateString: string): string {\n    let date = this.parseJsonDate(psJsonDateString);\n    return this.getMmDdYyyyDateString(date);\n  },\n  /**\n   * Gets the date in the form MM/DD/YYYY\n   * @param date The date object to convert.\n   */\n    getMmDdYyyyDateString(date: Date): string {\n    return (date.getMonth() + 1) + '/' + date.getDate() + '/' + date.getFullYear();\n  },\n  addDaysToDate: function(date, numDays): Date {\n    date.setDate(date.getDate() + numDays);\n    return date;\n  },\n  getLocalizedDayOfWeek: function(date): string {\n    return this.locale.DATETIME_FORMATS.DAY[date.getDay()];\n  },\n  getNumericFormat: function(): {\n    format: string,\n    size: string,\n    gs: string,\n    ds: string,\n    regex: string\n  } {\n    //{ format: '#,##0.#########', size: '3', gs: ',', ds: '.', regex: '([-]?(([0-9]{1,3}(,[0-9]{3})*(\\.[0-9]+)?|\\.[0-9]+)|([0-9]*(\\.[0-9]+)?)))' }\n    return {\n      format: this.locale.NUMBER_FORMATS.number_format,\n      size: this.locale.NUMBER_FORMATS.PATTERNS[0].gSize,\n      gs: this.locale.NUMBER_FORMATS.GROUP_SEP,\n      ds: this.locale.NUMBER_FORMATS.DECIMAL_SEP,\n      regex: this.locale.NUMBER_FORMATS.number_regex\n    };\n  },\n  /**\n   * Localize a number, and optionally round it to a specific number of decimal places\n   * @param number, number to localize\n   * @param decimalPlaces (optional), number of decimal places to round to\n   * @returns the localized version of the number\n   */\n  localizeNumber: function(number: number, decimalPlaces): string | undefined {\n    if (number == null) {\n      return;\n    }\n\n    if (decimalPlaces != null && !isNaN(decimalPlaces)) {\n      // round the number to n decimal places before localizing\n      let multiplier = 1;\n      for (let i = 0; i < decimalPlaces; i++) {\n        multiplier *= 10;\n      }\n      number = Math.round(number * multiplier) / multiplier;\n    }\n    return formatNumber(this.getNumericFormat(), number);\n  },\n  deLocalizeNumber: function(number: string): number {\n    return this.removeNumberFormat(this.getNumericFormat(), number);\n  },\n  deLocalizeNumberToString: function(number: string): string | undefined {\n    let result = this.removeNumberFormat(this.getNumericFormat(), number);\n    if (result == null) {\n      return;\n    }\n    return String(result);\n  },\n  removeNumberFormat: function(format: any, number: any): number | undefined {\n    if (number == null) {\n      return;\n    }\n\n    // IE does not like instantiating RegExp objects with empty values, so we have to\n    // check for valid values in the grouping separator before using it in a RegExp.\n    let gsNotBlank = (format.gs === '.' || format.gs === ',' || format.gs === ' ');\n    number = number.toString();\n    // We also want to check that only valid characters are present.\n    let regexString = '^' + format.regex + '$';\n    let validNumber = new RegExp(regexString, 'g');\n    if (number !== '' && number.match(validNumber) != null) {\n      if (gsNotBlank) {\n        let gs = new RegExp('\\\\' + format.gs, 'g');\n        number = number.replace(gs, '');\n      }\n      let ds = new RegExp('\\\\' + format.ds, 'g'); //The decimal separator is not expected to be empty\n      number = parseFloat(number.replace(ds, '.'));\n    } else {\n      return;\n    }\n\n    if (!isNaN(number)) {\n      return number;\n    }\n  },\n  isValidNumber: function(numValue: string): boolean {\n    if (numValue !== '') {\n      let regexString = '^' + this.locale.NUMBER_FORMATS.number_regex + '$';\n      let regex = new RegExp(regexString, 'g');\n      if (regex.test(numValue)) {\n        return (this.deLocalizeNumber(numValue) != null);\n      } else {\n        return false;\n      }\n    }\n    return true;\n  },\n  /**\n   * Adds a new field for an object with the value localized.\n   * This function will add a new field to the obejct with the localized value.\n   * @param object An object with a number value that needs to be localized\n   * @param key The key of the value that needs to be localized.\n   */\n  localizeNumericObject: function(object: Object, key: string): void {\n    object['_i18n_' + key] = this.localizeNumber(object[key]);\n  },\n  /**\n   * This is the sister function of localizeNumericObject. If the localized value\n   * can be parsed, it will update the original value with the deLocalized version.\n   * @param object An object with a number value that has been localized using localizeNumericObject\n   * @param key The key of the value that got localized.\n   */\n  deLocalizeNumericObject: function(object: Object, key: string): void {\n    if (!object.hasOwnProperty('_i18n_' + key)) {\n      return;\n    }\n\n    if (object['_i18n_' + key] == null || object['_i18n_' + key] === '') {\n      object[key] = '';\n      return;\n    }\n\n    object[key] = this.deLocalizeNumber(object['_i18n_' + key]);\n  },\n  /**\n   * Generate a localized time string from a javascript date object.\n   * @param time - javascript date object\n   * @returns {string}\n   */\n  makeStrFromTime: function(time: Date): string {\n    let separator = ':';\n    let timeFormat = this.locale.DATETIME_FORMATS.shortTime;\n    let ampmNames = this.locale.DATETIME_FORMATS.AMPMS;\n    let show24Hours = (timeFormat === 'HH:mm') ? true : false;\n    let hours: number = time.getHours();\n    let mins: number = time.getMinutes();\n    let hoursString: string;\n    let minsString: string;\n\n    if (!show24Hours) {\n      hours = ((hours + 11) % 12) + 1;\n    }\n    if (hours < 10) {\n      hoursString = '0' + hours;\n    } else {\n      hoursString = String(hours);\n    }\n\n    if (mins < 10) {\n      minsString = '0' + mins;\n    } else {\n      minsString = String(mins);\n    }\n    return hours + separator + mins + (show24Hours ? '' : ' ' + ampmNames[time.getHours() < 12 ? 0 : 1]);\n  }\n};\n"]}