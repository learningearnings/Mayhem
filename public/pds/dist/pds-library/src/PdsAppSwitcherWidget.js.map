{"version":3,"sources":["pds-library/src/PdsAppSwitcherWidget.ts"],"names":[],"mappings":";;;;;;AAAA,0BAAwB,aAAa,CAAC,CAAA;AACtC;IAA0C,wCAAS;IAAnD;QAA0C,8BAAS;QACjD,OAAE,GAAG,kBAAkB,CAAC;QAExB,aAAQ,GAAY,IAAI,CAAC;QAQzB,gBAAW,GAA4B;YACrC,YAAY,EAAE,iBAAiB;YAC/B,eAAe,EAAE,kBAAkB;YACnC,QAAQ,EAAE,uBAAuB;YACjC,UAAU,EAAE,yBAAyB;YACrC,gBAAgB,EAAE,mBAAmB;SACtC,CAAC;IAkCJ,CAAC;IAhCC,iDAAkB,GAAlB;IACA,CAAC;IAED,2CAAY,GAAZ,UAAa,cAAc;QACzB,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;IAC1C,CAAC;IAED,oCAAK,GAAL;QAAA,iBAWC;QAVC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,UAAC,KAAK;YAC5C,EAAE,CAAC,CAAC,KAAI,CAAC,QAAQ,IAAI,CAAC,KAAI,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,EAAE,mBAAmB,CAAC,CAAC,CAAC,CAAC;gBACnF,KAAI,CAAC,KAAK,EAAE,CAAC;YACf,CAAC;QACH,CAAC,CAAC,CAAC;QAGH,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QAEf,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACpB,CAAC;IAED,8CAAe,GAAf,UAAgB,KAAK;QAArB,iBAOC;QANC,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACnB,UAAU,CAAC;gBACT,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACvB,CAAC,EAAE,CAAC,CAAC,CAAC;QACR,CAAC;IACH,CAAC;IAED,oCAAK,GAAL;QACE,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IACxB,CAAC;IACH,2BAAC;AAAD,CAnDA,AAmDC,CAnDyC,qBAAS,GAmDlD;AAnDY,4BAAoB,uBAmDhC,CAAA","file":"PdsAppSwitcherWidget.js","sourcesContent":["import {PdsWidget} from './PdsWidget';\nexport class PdsAppSwitcherWidget extends PdsWidget {\n  is = 'pds-app-switcher';\n\n  showApps: boolean = true;\n\n  //Apps and plugins are properties. They can be bound via angular 2\n  //or they can use javascript to query for it and set them manually.\n  apps: Array<{title: string, href: string, id: string}>;\n\n  plugins: Array<{title: string, href: string}>;\n\n  classLookup: {[key: string]: string} = {\n    powerTeacher: 'pds-pt-icon-xxl',\n    powerTeacherPro: 'pds-ptp-icon-xxl',\n    learning: 'pds-learning-icon-xxl',\n    assessment: 'pds-assessment-icon-xxl',\n    specialEducation: 'pds-sped-icon-xxl'\n  };\n\n  messageKeysUpdated(): void {\n  }\n\n  getIconClass(classLookupKey): string {\n    return this.classLookup[classLookupKey];\n  }\n\n  ready(): void {\n    document.body.addEventListener('click', (event) => {\n      if (this.showApps && !this.pds.utils.getClosest(event.target, 'pds-apps-dropdown')) {\n        this.close();\n      }\n    });\n\n    //test data\n    this.apps = [];\n\n    this.plugins = [];\n  }\n\n  openAppSwitcher(event): void {\n    event.preventDefault();\n    if (!this.showApps) {\n      setTimeout(() => {\n        this.showApps = true;\n      }, 0);\n    }\n  }\n\n  close(): void {\n    this.showApps = false;\n  }\n}\n"]}