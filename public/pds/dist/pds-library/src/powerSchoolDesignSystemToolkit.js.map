{"version":3,"sources":["pds-library/src/powerSchoolDesignSystemToolkit.ts"],"names":[],"mappings":"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","file":"powerSchoolDesignSystemToolkit.js","sourcesContent":["import {PdsDateWidget} from './PdsDateWidget';\nimport {PdsDateWidgetDialog} from './PdsDateWidgetDialog';\nimport {PdsDynamicSelect} from './PdsDynamicSelect';\nimport {PdsTextWidget} from './PdsTextWidget';\nimport {PdsNumberWidget} from './PdsNumberWidget';\nimport {pdsLogger} from './pdsLogger';\nimport {pdsI18n} from './pdsI18n';\nimport {pdsUtils} from './pdsUtils';\nimport {pdsValidation} from './pdsValidation';\nimport {PdsAppSwitcherWidget} from './PdsAppSwitcherWidget';\nimport {PdsNumberedSlider} from './PdsNumberedSlider';\nimport {PdsNaturalSort} from './PdsNaturalSort';\n\nlet powerSchoolDesignSystemToolkit;\n\nlet w: any = window;\n\nif (w.powerSchoolDesignSystemToolkit == null) {\n    /**\n     * This function works just like Object.getOwnPropertyDescriptor but it gets the property descriptor\n     * even if it's inherited.\n     * @param object - The object to get the property off of.\n     * @param prop - The property to get a descriptor for.\n     * @returns {PropertyDescriptor} The property descriptor of the property.\n     */\n    let getPropertyDescriptor = function (object: any, prop: string): PropertyDescriptor {\n        let objectDescriptor: PropertyDescriptor = Object.getOwnPropertyDescriptor(object, prop);\n        if (objectDescriptor == null) {\n            return getPropertyDescriptor(Object.getPrototypeOf(object), prop);\n        } else {\n            return objectDescriptor;\n        }\n    };\n\n    /**\n     * Polymer needs an object definition with all properties on the same object with no inheritance tree. It\n     * also needs an actual object, not an object constructor. Using TypeScript to create Polymer definitions\n     * is super convenient because it allows us to take advantage of inheritance, but it gives us back an object\n     * that is a constructor, and has an inheritance tree.  This function takes the constructor generated by\n     * typescript, and returns a new object instance that has all of the properties and functions all defined\n     * as non-inherited properties of a new instance of the passed in constructor.\n     */\n    let createFlattenedPolymerDefinition = (token: any): any => {\n        let tsObject = new token();\n        let definition = {};\n        let objectDef;\n        /* tslint:disable */\n        for (let prop in tsObject) {\n          /* tslint:enable */\n            objectDef = getPropertyDescriptor(tsObject, prop);\n            if (objectDef != null && objectDef.hasOwnProperty('get')) {\n                Object.defineProperty(definition, prop, objectDef);\n            } else {\n                definition[prop] = tsObject[prop];\n            }\n        }\n\n        delete (<{querySelector: any}>definition).querySelector;\n        delete (<{dispatchEvent: any}>definition).dispatchEvent;\n        return definition;\n    };\n\n    let powerSchoolDesignSystemToolkit = {\n        i18n: pdsI18n,\n        validation: pdsValidation,\n        utils: pdsUtils,\n        logger: pdsLogger,\n        log: pdsLogger.log,\n        naturalSort: new PdsNaturalSort,\n        naturalSortConstructor: PdsNaturalSort,\n        _pdsWidgetDefinitions: {\n            pdsTextWidgetDefinition: createFlattenedPolymerDefinition(PdsTextWidget),\n            pdsNumberWidgetDefinition: createFlattenedPolymerDefinition(PdsNumberWidget),\n            pdsDateWidgetDefinition: createFlattenedPolymerDefinition(PdsDateWidget),\n            pdsDateWidgetDialogDefinition: createFlattenedPolymerDefinition(PdsDateWidgetDialog),\n            pdsDynamicSelectDefinition: createFlattenedPolymerDefinition(PdsDynamicSelect),\n            pdsAppSwitcherDefinition: createFlattenedPolymerDefinition(PdsAppSwitcherWidget),\n            pdsNumberedSliderDefinition: createFlattenedPolymerDefinition(PdsNumberedSlider)\n        }\n    };\n    powerSchoolDesignSystemToolkit.naturalSort.ignoreCase();\n\n    //give a pointer to the library from each of the sub modules.\n    for (let prop in powerSchoolDesignSystemToolkit) {\n        if (prop !== '_pdsWidgetDefinitions') {\n            powerSchoolDesignSystemToolkit[prop].pds = powerSchoolDesignSystemToolkit;\n        }\n    }\n\n    for (let prop in powerSchoolDesignSystemToolkit._pdsWidgetDefinitions) {\n        if (prop !== '_pdsWidgetDefinitions') {\n            powerSchoolDesignSystemToolkit._pdsWidgetDefinitions[prop].pds = powerSchoolDesignSystemToolkit;\n        }\n    }\n\n    //Add the library to the window so Polymer can read from it.\n    if (w.powerSchoolDesignSystemToolkit == null) {\n        w.powerSchoolDesignSystemToolkit = powerSchoolDesignSystemToolkit;\n    }\n} else {\n    powerSchoolDesignSystemToolkit = w.powerSchoolDesignSystemToolkit;\n}\nexport default powerSchoolDesignSystemToolkit;\n"]}