.main-content-wrapper
  .full-content
    .bank_content
      %h2 The Bank
      %p
        Teachers have enough to worry about, which is why we made LE Credits the
        easiest and simplest way to reward students for a job well done.
        Below you'll find everything you need to manage your classroom's LE funds.
      %p.credits-available
        %strong
          Credits Available:
        = number_with_precision(current_person.main_account(current_school).balance, precision: 2, delimiter: ',')
        = link_to 'Edit Credit Categories', teachers_otu_code_types_path, :class => 'btn awesome-button'

      .distribute-credits
        %h3 Distribute Credits
        %ul#distribute-credits{:class => "nav nav-tabs"}
          %li
            %a{:href => "#print-credits", 'data-toggle' => 'tab'}
              %p
                %i{:class => "icon-print"}
                Print Credits
          %li
            %a.electronic_credits{:href => "#electronic-credits", 'data-toggle' => 'tab'}
              %p
                %i{:class => "icon-envelope"}
                Electronic Credits
          %li
            %a{:href => "#transfer-credits", 'data-toggle' => 'tab'}
              %p
                %i{:class => "icon-random"}
                Transfer Credits
          %li
            %a{:href => "#lookup-code", 'data-toggle' => 'tab'}
              %p
                %i{:class => "icon-search"}
                Lookup A Code
          - if current_user.person.is_a?(SchoolAdmin)
            %li
              %a{intro_tour(2,'auto_credits',current_person, {'href' => '#auto-credits', 'data-toggle' => 'tab'} ) }
                %p
                  %i{:class => "icon-star"}
                  Auto-Credits
        .tab-content
          .tab-pane#print-credits
            %h4 Print Physical Credits
            = form_for OtuCode.new, :url => school_admins_create_print_bucks_path do |f|
              = label_tag "Teacher"
              = select("teacher", "id", current_school.teachers.order('last_name, first_name').collect {|p| [ p.name, p.id ] })
              = label_tag '1s'
              = text_field_tag :point1, nil, :class => 'focus-on-me input-mini credits'
              = label_tag '5s'
              = text_field_tag :point5, nil, :class => 'input-mini credits'
              = label_tag '10s'
              = text_field_tag :point10, nil, :class => 'input-mini credits'
              = f.submit 'Print These Credits', :class => 'awesome-button'

          .tab-pane#electronic-credits
            %h4 Issue Electronic Credits to a single student
            = form_for OtuCode.new, :url => school_admins_create_ebucks_path do |f|
              = label_tag 'Student'
              = select("student", "id", current_school.students.order('last_name, first_name').collect {|p| [ p.name, p.id ] }, :include_blank => true)
              = label_tag 'Credits'
              = text_field_tag :points, nil, :class => "input-mini credits"
              = f.label :otu_code_category_id, "Credit Category"
              = f.select :otu_code_category_id, options_for_select(current_person.otu_code_categories.map{|x| [x.name, x.id]})
              = f.submit 'Send These Credits', :class => 'awesome-button'

            %h4 Issue Electronic Credits to each student in a classroom
            = form_for OtuCode.new, :url => school_admins_create_ebucks_for_classroom_path do |f|
              = label_tag 'Classroom'
              = select("classroom", "id", current_person.classrooms.uniq.order('name').collect {|p| [ p.name, p.id ] }, :include_blank => true)
              = label_tag 'Credits'
              = text_field_tag :class_points, nil,:class => 'class_points input-mini credits', :onclick => 'copy_points();'
              = f.label :otu_code_category_id, "Credit Category"
              = f.select :otu_code_category_id, options_for_select(current_person.otu_code_categories.map{|x| [x.name, x.id]}), {}, id: "classroom_otu_code_category"
              #classroom_distribution

          .tab-pane#transfer-credits
            %h4 Transfer Credits Between Teachers
            = form_for OtuCode.new, :url => school_admins_transfer_bucks_path do |f|
              = label_tag 'Credits'
              = text_field_tag :transfer_points, nil, :class => "input-mini credits"
              = label_tag :from_teacher
              = select_tag :from_teacher_id, options_from_collection_for_select((current_school.teachers << SchoolAdmin.find(current_person.id)), :id, :to_s), :include_blank => true
              = label_tag :to_teacher
              = select_tag :to_teacher_id, options_from_collection_for_select((current_school.teachers << SchoolAdmin.find(current_person.id)), :id, :to_s), :include_blank => true
              = f.submit 'Transfer Credits', :class => 'awesome-button'
          .tab-pane#lookup-code
            =render "/banks/code_lookup"

          - if current_user.person.is_a?(SchoolAdmin)
            .tab-pane#auto-credits
              %h4 Assign Automatic Credits
              %p
                Automatic credits are distributed at the end of the week on Saturday night, for the previous week.
              -if current_school.is_inow?
                = form_for @school, url: school_admins_update_auto_credits_path, :method => :post do |f|
                  = f.label :weekly_perfect_attendance_amount
                  %br/
                  = f.text_field :weekly_perfect_attendance_amount, :value => @school.weekly_perfect_attendance_amount, :class => "input-mini credits"
                  %br/
                  = f.label :weekly_no_tardies_amount
                  %br/
                  = f.text_field :weekly_no_tardies_amount, :value => @school.weekly_no_tardies_amount, :class => "input-mini credits"
                  %br/
                  = f.label :weekly_no_infractions_amount
                  %br/
                  = f.text_field :weekly_no_infractions_amount, :value => @school.weekly_no_infractions_amount, :class => "input-mini credits"
                  %br/
                  = f.submit 'Update Auto-Credits', :class => 'awesome-button'
              - else
                %p
                  This functionality is not supported for your school.
%script#students_table{ type: 'text/html' }
  :plain
    <table class='table'>
      <thead>
        <tr>
          <th>First Name</th>
          <th>Last Name</th>
          <th>Credits</th>
          <th>Reason</th>
        </tr>
      </thead>
      <tbody>
        {{#students}}
          <tr>
            <td>{{first_name}}</td>
            <td>{{last_name}}</td>
            <td>
              <input type='text' name='credits[{{id}}]' class='classroom_student_points' />
            </td>
            <td>
              #{select_tag 'credit_categories[{{id}}]', options_for_select(current_person.otu_code_categories.map{|x| [x.name, x.id]}), class: "classroom_student_reasons", id: "classroom_otu_code_category_{{id}}"}
            </td>
          </tr>
        {{/students}}
      </tbody>
    </table>
    <input class="awesome-button" name="commit" type="submit" value="Send These Credits">

:coffeescript
  jQuery ->
    ($ '#distribute-credits a').click (e) ->
      e.preventDefault()
      ($ this).tab('show')
    ($ '#distribute-credits a.electronic_credits').tab('show')

    distributeCreditsToAllStudents = () ->
      points = $('#classroom_points').val()
      $('input.classroom_student_points').val(points)

    distributeReasonToAllStudents = () ->
      reason = $('#classroom_otu_code_category').val()
      $('.classroom_student_reasons').val(reason)

    ($ '#classroom_id').on 'change', (e) ->
      (
        $.get('/classrooms/' + $('#classroom_id').val() + '.json')
          .success (students) ->
            # We have to map the rails-returned data to something more appropriate for mustache
            mapped_students = $.map students, (student_wrapper) ->
              student_wrapper.student
            ich.grabTemplates();
            html = ich.students_table(students: mapped_students)
            $('#classroom_distribution').html(html)
            distributeCreditsToAllStudents()
            distributeReasonToAllStudents()
      )

    $('#classroom_points').on('change', distributeCreditsToAllStudents)
    $('#classroom_otu_code_category').on('change', distributeReasonToAllStudents)

    ($ document).ready ->
      $('.class_points').on 'keyup', (e) ->
        (
          copy_points()
        )
:javascript
  function copy_points() {
    var points = $('.class_points').val();
    $('input.classroom_student_points').val(points);
  }
  introJs().setOption('doneLabel', 'Next page').start().oncomplete(function() {
    window.location.href = "/teachers/bulk_students?multipage=true&tour=Y";
  });    
