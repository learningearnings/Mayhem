%html.resp
  / <![endif]
  %head
    %title Learning Earnings
    = csrf_meta_tags
    %meta{:name => "viewport", :content => "width=device-width"}

    = javascript_include_tag 'svgweb/svg.js', "data-path" => "#{File.dirname(asset_path('svgweb/svg.js'))}", "data-htc-filename" => "#{File.basename(asset_path('svgweb/svg.htc'))}",  "data-swf-path" => "#{asset_path('svgweb/svg.swf')}"
    = javascript_include_tag '//cdnjs.cloudflare.com/ajax/libs/jstimezonedetect/1.0.4/jstz.min.js'
    = javascript_include_tag 'application'
    = javascript_include_tag "https:////code.jquery.com/jquery-1.10.2.js"
    = javascript_include_tag "https://code.jquery.com/ui/1.11.4/jquery-ui.js"
    = stylesheet_link_tag "https://code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css"          
    = stylesheet_link_tag    'application'
    :plain
      <style>
        html.resp, body.resp {
          overflow: scroll;
        }
      </style>
    :javascript
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-8360883-1']);
      _gaq.push(['_trackPageview']);
      (function() {
      var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
      ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
      var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();
  
  %body.resp
    .resp-page-content-container
      .resp-head
        .messages-container
          = render "layouts/flashes"
      .resp-content-container
        .resp-side-art
          .resp-side-art-students
            .main-content-wrapper
              .full-content
                .bank_content

                .distribute-credits
                  %h4 Issue Electronic Credits
                  %p.credits-available
                    %strong
                      Teacher:
                      = current_person.name
                    %br/
                    %strong
                      Credits Available:
                    = number_with_precision(current_person.main_account(current_school).balance, precision: 2, delimiter: ',')
                    = " for school #{current_school.name}"
                  - unless current_otu_code_categories.any?
                    %strong If you would like to use the credit categories feature, you must create categories through the main learning earnings site
                  = form_for OtuCode.new, :url => "#", :html => {:id => "global_populate"} do |f|
                    %h4 Populate all fields with:
                    = label_tag 'Credits'
                    = text_field_tag :class_points, nil,:min => '0',:step => '1',:type => "number", :class => 'class_points', :style => "width: 50px;"
                    - if current_otu_code_categories.any?
                      = label_tag 'Category'
                      %td= select_tag "credit_categories", options_for_select(current_otu_code_categories.map{|x| [x.name, x.id]}), prompt: "Select Category", class: "global_category"
                  = form_for OtuCode.new, :url => sti_create_ebucks_for_students_path(params), :method => :post do |f|
                    #classroom_distribution
                      %table.table
                        %thead
                          %tr
                            %th.sti_table_heading First Name
                            %th.sti_table_heading Last Name
                            %th.sti_table_heading Credits
                            - if current_otu_code_categories.any?
                              %th.sti_table_heading Category
                        %tbody
                          - @students.each do |student|
                            %tr
                              %td= student.first_name
                              %td= student.last_name
                              %td= text_field_tag "credits[#{student.id}]", nil, class: "classroom_student_points", style: "width: 50px"
                              - if current_otu_code_categories.any?
                                %td= select_tag "credit_categories[#{student.id}]", options_for_select(current_otu_code_categories.map{|x| [x.name, x.id]}), prompt: "Select Category", class: "student_category"
                      %input.awesome-button{type: "submit", name: "commit", value: "Send These Credits", class: "btn"}

:coffeescript
  jQuery ->
    ($ '#global_populate').submit (e) ->
      e.preventDefault()
    ($ '.class_points').keyup (e) ->
      $('.classroom_student_points').val($(this).val())
    ($ '.global_category').change (e) ->
      $('.student_category').val($(this).val())